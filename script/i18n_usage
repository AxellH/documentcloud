#!/bin/bash


if [ -z "$1" ]; then
    printf %s "\
A simple shell script that attempts to find all uses of a given translation string
To that end it runs grep on:
   * JST directories
   * Workspace javascripts
   * Viewer javascripts

It first looks for the string surrounded by quotes and preceded by _.t,
but falls back to straight string matching if it's not found

usage: $0 <i18n key>
"
    exit 1
fi

clear

DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
STRING=$1
FOUND=false

grep -n --color=always -r  "_.t('$STRING'" \
    --exclude=$DIR/../public/javascripts/translations/*js \
    $DIR/../app/views/jst \
    $DIR/../public/javascripts | sed 's/.*\.\.\///'
if [ ${PIPESTATUS[0]} -eq 0 ]; then
    FOUND=true
fi

grep -n --color=always -r  "DV.t('$STRING'" \
    --exclude=$DIR/../../document-viewer/public/javascripts/DV/schema/translation* \
    $DIR/../../viewer/public/javascripts | sed 's/.*\.\./../'
if [ ${PIPESTATUS[0]} -eq 0 ]; then
    FOUND=true
fi

if [ $FOUND == false ]; then
    echo 'Translation not found, falling back to looking for raw string'
    grep -n --color=always -r  $STRING \
        --exclude=$DIR/../public/javascripts/translations/*js \
        $DIR/../app/views/jst \
        $DIR/../public/javascripts | sed 's/.*\.\.\///'

    grep -n --color=always -r  $STRING \
        --exclude=$DIR/../../document-viewer/public/javascripts/DV/schema/translation* \
        $DIR/../../document-viewer/public/javascripts | sed 's/.*\.\./../'
fi
